1. Retrieve all columns from the Sales table.
       select* from tab;
+---------+------------+---------------+------------+-------------+
| sale_id | product_id | quantity_sold | sale_date  | total_price |
+---------+------------+---------------+------------+-------------+
|       1 |        101 |             5 | 2024-01-01 |     2500.00 |
|       2 |        102 |             3 | 2024-01-02 |      900.00 |
|       3 |        103 |             6 | 2024-01-03 |       60.00 |
|       4 |        104 |             4 | 2024-01-03 |       80.00 |
|       5 |        105 |             6 | 2024-01-03 |       90.00 |
+---------+------------+---------------+------------+-------------+
5 rows in set (0.01 sec)
    
2. Retrieve the sale_id and sale_date from the Sales table.
        select sale_id, sale_date from tab;
+---------+------------+
| sale_id | sale_date  |
+---------+------------+
|       1 | 2024-01-01 |
|       2 | 2024-01-02 |
|       3 | 2024-01-03 |
|       4 | 2024-01-03 |
|       5 | 2024-01-03 |
+---------+------------+
       5 rows in set (0.00 sec)
3. Filter the Sales table to show only sales with a total_price greater than $100.
        select* from tab where total_price>100;
+---------+------------+---------------+------------+-------------+
| sale_id | product_id | quantity_sold | sale_date  | total_price |
+---------+------------+---------------+------------+-------------+
|       1 |        101 |             5 | 2024-01-01 |     2500.00 |
|       2 |        102 |             3 | 2024-01-02 |      900.00 |
+---------+------------+---------------+------------+-------------+
        2 rows in set (0.01 sec)
4. Retrieve the sale_id and total_price from the Sales table for sales made on January 3, 2024.
          select sale_id, total_price from tab where sale_date='2024-01-03';
+---------+-------------+
| sale_id | total_price |
+---------+-------------+
|       3 |       60.00 |
|       4 |       80.00 |
|       5 |       90.00 |
+---------+-------------+
          3 rows in set (0.00 sec)
5. Calculate the total revenue generated from all sales in the Sales table.
         select sum(total_price) as total_revenue from tab;
+---------------+
| total_revenue |
+---------------+
|       3630.00 |
+---------------+
        1 row in set (0.01 sec)
6. Calculate the total quantity_sold from the Sales table.
             select sum(quantity_sold) as total_quantity_sold from tab;
+---------------------+
| total_quantity_sold |
+---------------------+
|                  24 |
+---------------------+
               1 row in set (0.00 sec)
7. Retrieve the sale_id, product_id, and total_price from the Sales table for sales with a
quantity_sold greater than 4.
         select sale_id,product_id,total_price from tab where quantity_sold>4;
+---------+------------+-------------+
| sale_id | product_id | total_price |
+---------+------------+-------------+
|       1 |        101 |     2500.00 |
|       3 |        103 |       60.00 |
|       5 |        105 |       90.00 |
+---------+------------+-------------+
            3 rows in set (0.00 sec)
8. Â Calculate the average total_price of sales in the Sales table.
       select avg(total_price) as average_price from tab;
+---------------+
| average_price |
+---------------+
|    726.000000 |
+---------------+
       1 row in set (0.00 sec)
